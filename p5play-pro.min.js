/**
 * p5play-pro
 * @version 0.0
 * @author quinton-ashley
 * @license CC BY-NC-ND 4.0
 */
p5.prototype.registerMethod("init",(function(){this.loadAds=t=>{t??={},void 0!==window.webkit&&webkit.messageHandlers.loadAds.postMessage(JSON.stringify(t))},this.showAd=t=>{t&&(t=t.toLowerCase()),t??="interstitial",void 0!==window.webkit&&confirm("p5play:"+t)},this.Netcode=class{constructor(){this.typeSizes={boolean:1,Uint8:1,Vec2_boolean:1,Float16:2,number:2,color:4,Float32:4,Int32:4,Vec2:4,Float64:8},this.player=0}connect(){}disconnect(){}spriteToBinary(t){const e=pInst.Sprite.props;let n=3;for(let i=0;i<e.length;i++){if(t.watch&&!t.mod[i])continue;const o=e[i],s=pInst.Sprite.propTypes[o];let l=t[o];if("ani"==o&&(l=l?.name),null!=l)if("string"==s){n+=(new TextEncoder).encode(l).length+3}else n+=this.typeSizes[s]+1}if(3==n)return null;const i=new ArrayBuffer(n),o=new DataView(i);o.setFloat16=(t,e)=>o.setUint16(t,encodeFloat16(e)),o.setUint16(0,t._uid);let s=2;for(let n=0;n<e.length;n++){if(t.watch&&!t.mod[n])continue;const i=e[n],l=pInst.Sprite.propTypes[i];let r=t[i];if(null!=r){if(o.setUint8(s,n),s+=1,"boolean"==l)o.setUint8(s,r?1:0);else if("number"==l||"Float16"==l)o.setFloat16(s,r);else if("Float32"==l)o.setFloat32(s,r);else if("Float64"==l)o.setFloat64(s,r);else{if("string"==l){"ani"==i&&(r=r.name);const t=(new TextEncoder).encode(r);o.setUint16(s,t.length),s+=2;for(let e=0;e<t.length;e++)o.setUint8(s,t[e]),s+=1;continue}"color"==l?(o.setUint8(s,r.levels[0]),o.setUint8(s+1,r.levels[1]),o.setUint8(s+2,r.levels[2]),o.setUint8(s+3,r.levels[3])):"Vec2"==l?(o.setFloat16(s,r.x),o.setFloat16(s+2,r.y)):"Vec2_boolean"==l?o.setUint8(s,(r.x?1:0)|(r.y?2:0)):"Uint8"==l?"collider"==i?o.getUint8(s,t.__collider):"shape"==i?o.getUint8(s,t.__shape):o.getUint8(s,r):"Int32"==l&&o.setInt32(s,r)}s+=this.typeSizes[l]}}return o.setUint8(s,255),t.watch=!0,t.mod=[],new Uint8Array(i)}binaryToSprite(t,e){let n;n=t instanceof DataView?t:new DataView(t.buffer),n.getFloat16=t=>decodeFloat16(n.getUint16(t));let i=e||0,o=n.getUint16(i);i+=2;let s=pInst.p5play.sprites[o]||new pInst.Sprite;for(;i!==n.byteLength;){const t=n.getUint8(i);if(255===t)break;i+=1;const e=pInst.Sprite.props[t],o=pInst.Sprite.propTypes[e];if("boolean"===o)s[e]=0!==n.getUint8(i);else if("number"==o||"Float16"===o)s[e]=n.getFloat16(i);else if("Float32"===o)s[e]=n.getFloat32(i);else if("Float64"===o)s[e]=n.getFloat64(i);else{if("string"===o){const t=n.getUint16(i);i+=2;const o=new Uint8Array(n.buffer,i,t);s[e]=(new TextDecoder).decode(o),i+=t;continue}if("color"===o){const t=n.getUint8(i),o=n.getUint8(i+1),l=n.getUint8(i+2),r=n.getUint8(i+3);s[e]=color(t,o,l,r)}else if("Vec2"===o){const t=n.getFloat16(i),o=n.getFloat16(i+2);s[e]={x:t,y:o}}else if("Vec2_boolean"===o){const t=n.getUint8(i);s[e]={x:1==(1&t),y:2==(2&t)}}else if("Uint8"===o){let t=n.getUint8(i);"collider"===e?s.collider=pInst.Sprite.colliderTypes[t]:"shape"===e?s.shape=pInst.Sprite.shapeTypes[t]:s[e]=t}else"Int32"===o&&(s[e]=n.getInt32(i))}i+=this.typeSizes[o]}return n.offset=i,s}inputToJSON(){}},this.netcode=new this.Netcode,this.inputs=[],this.inputs[this.netcode.player]={mouse:this.mouse,kb:this.kb,contro:this.contro}}));
